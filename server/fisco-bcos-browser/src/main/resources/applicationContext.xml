<?xml version="1.0" encoding="UTF-8" ?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/jdbc  
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd	
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-3.0.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:annotation-config />
	<context:component-scan base-package="cn.bcos" />

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
			</list>
		</property>
	</bean>

	<bean id="start" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<bean class="cn.bcos.browser.service.GovernService" />
		</property>
		<property name="targetMethod" value="start" />
		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="handleBlockInfo" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<bean class="cn.bcos.browser.service.GovernService" />
		</property>
		<property name="targetMethod" value="handleBlockInfo" />
		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="startQueue" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<bean class="cn.bcos.browser.service.GovernService" />
		</property>
		<property name="targetMethod" value="startQueue" />
		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="handlePendingTransInfo" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<bean class="cn.bcos.browser.service.GovernService" />
		</property>
		<property name="targetMethod" value="handlePendingTransInfo" />
		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="handleNodeInfo" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<bean class="cn.bcos.browser.service.GovernService" />
		</property>
		<property name="targetMethod" value="handleNodeInfo" />
		<property name="concurrent" value="false" />
	</bean>
	

	<bean id="startTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="start" />
		<property name="cronExpression" value="${startTrigger.schedule.time}" />
	</bean>
	
	<bean id="blockInfoTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="handleBlockInfo" />
		<property name="cronExpression" value="${blockInfoTrigger.schedule.time}" />
	</bean>
	
	<bean id="queueTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="startQueue" />
		<property name="startDelay" value="0" />
		<property name="repeatCount" value="0"/>
	</bean>
	
	<bean id="pendingTransTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="handlePendingTransInfo" />
		<property name="cronExpression" value="${pendingTransTrigger.schedule.time}" />
	</bean>
	
	<bean id="NodeInfoTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="handleNodeInfo" />
		<property name="cronExpression" value="${NodeInfoTrigger.schedule.time}" />
	</bean>
	

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
         			<ref bean="startTrigger" />
         			<ref bean="blockInfoTrigger" />       
            		<ref bean="queueTrigger" />              
           		    <ref bean="pendingTransTrigger" /> 
           		    <ref bean="NodeInfoTrigger" />                 
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="jdbc:mysql://${db.ip}:${db.port}/${db.database}?characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull"/>
		<property name="username" value="${db.user}" />
		<property name="password" value="${db.password}" />
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="initialSize" value="${db.initialSize}" />
		<property name="minIdle" value="${db.minIdle}" />
		<property name="maxActive" value="${db.maxActive}" />
		<property name="maxWait" value="${db.maxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="/* ping */ SELECT 1" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="false" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="60" />
		<property name="logAbandoned" value="true" />
		<property name="filters" value="stat" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.bcos.browser.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:/mapper/*.xml" />
	</bean>
    <bean id="threadPool" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="50" />
		<property name="maxPoolSize" value="100" />
		<property name="queueCapacity" value="500" />
		<property name="keepAliveSeconds" value="60" />
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy" />
		</property>
    </bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
</beans>