<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.bcos.browser.mapper.TableMapper">
    <update id="createTbGroup">
        CREATE TABLE IF NOT EXISTS tb_group (
            group_id int(11) NOT NULL COMMENT '群组ID',
            group_name varchar(128) NOT NULL COMMENT '群组名称',
            group_desc varchar(1024) COMMENT '群组描述',
            gmt_create datetime COMMENT '创建时间',
            gmt_modify datetime COMMENT '修改时间',
            PRIMARY KEY (group_id)
        ) COMMENT='群组信息表' ENGINE=InnoDB CHARSET=utf8
    </update>
    
    <update id="createTbBlockChainInfo">
        CREATE TABLE IF NOT EXISTS tb_blockchaininfo (
            group_id int(11) NOT NULL COMMENT '所属群组ID',
            latest_number int(11) COMMENT '最新块高',
            txn int(11) COMMENT '交易量',
            pending_txn int(11) COMMENT '正在处理但还未上链的交易个数',
            pbft_view int(11) COMMENT 'PBFT VIEW',
            gmt_create datetime COMMENT '创建时间',
            gmt_modify datetime COMMENT '修改时间',
            PRIMARY KEY (group_id)
        ) COMMENT='区块链全局信息表' ENGINE=InnoDB DEFAULT CHARSET=utf8
    </update>
    
    <update id="createTbContract">
        CREATE TABLE IF NOT EXISTS tb_contract (
            contract_id int(11) NOT NULL AUTO_INCREMENT COMMENT '合约编号',
            contract_name varchar(128) COMMENT '合约名称',
            contract_source text COMMENT '合约源码',
            contract_status tinyint(4) DEFAULT '0' COMMENT '编译（0：未编译，1：编译成功，2：编译失败）',
            contract_abi text COMMENT '编译合约生成的abi文件内容',
            contract_bin text COMMENT '合约binary',
            contract_path varchar(128) COMMENT '合约相对路径',
            contract_address varchar(128) COMMENT '合约地址',
            contract_desc text COMMENT '描述',
            error_info text COMMENT '编译错误信息',
            gmt_create datetime COMMENT '创建时间',
            gmt_modify datetime COMMENT '修改时间',
            PRIMARY KEY (contract_id),
            UNIQUE KEY (contract_name, contract_path)
        ) COMMENT='合约信息表' ENGINE=InnoDB AUTO_INCREMENT=100001 DEFAULT CHARSET=utf8
    </update>
    
    <update id="createTbFunction">
        CREATE TABLE IF NOT EXISTS tb_function (
            method_id varchar(128) COMMENT '方法id',
            abi_info text COMMENT 'abi信息',
            type varchar(32) COMMENT '方法类型',
            gmt_create datetime COMMENT '创建时间',
            gmt_modify datetime COMMENT '修改时间',
            PRIMARY KEY (method_id)
        ) COMMENT='方法解析信息表' ENGINE=InnoDB DEFAULT CHARSET=utf8
    </update>
    
    <update id="createTbUser">
        CREATE TABLE IF NOT EXISTS tb_user (
          user_id int(11) NOT NULL AUTO_INCREMENT COMMENT '用户编号',
          user_name varchar(64) binary NOT NULL COMMENT '用户名',
          group_id int(11) DEFAULT NULL COMMENT '所属群组编号',
          address varchar(64) DEFAULT NULL COMMENT '公钥地址',
          description varchar(250) DEFAULT NULL COMMENT '备注',
          create_time datetime DEFAULT NULL COMMENT '创建时间',
          modify_time datetime DEFAULT NULL COMMENT '修改时间',
          PRIMARY KEY (user_id),
          UNIQUE KEY unique_name (group_id,user_name),
          KEY index_address (address)
        ) COMMENT='用户信息表' ENGINE=InnoDB AUTO_INCREMENT=200001 DEFAULT CHARSET=utf8
    </update>
    
    <update id="createTbNode">
        CREATE TABLE IF NOT EXISTS tb_node (
            node_id varchar(192) NOT NULL COMMENT '节点ID',
            group_id int(11) NOT NULL COMMENT '所属群组id',
            ip varchar(16) COMMENT '节点ip',
            rpc_port varchar(16) COMMENT '节点rpc端口',
            p2p_port varchar(16) COMMENT '节点p2p端口',
            block_number int(11) DEFAULT 0 COMMENT '节点块高',
            pbft_view int(11) DEFAULT 0 COMMENT 'PBFT view',
            status tinyint(4) DEFAULT '0' COMMENT '节点状态（0：正常，1：异常）',
            type tinyint(4) DEFAULT '0' COMMENT '节点类型（0：手动添加，1：链上同步）',
            gmt_create datetime COMMENT '创建时间',
            gmt_modify datetime COMMENT '修改时间',
            PRIMARY KEY (group_id,node_id)
        ) COMMENT='节点信息表' ENGINE=InnoDB DEFAULT CHARSET=utf8
    </update>
    
    <update id="createTbTxnDaily">
        CREATE TABLE IF NOT EXISTS tb_txn_daily (
            pk_date date NOT NULL COMMENT '时间',
            group_id int(11) NOT NULL COMMENT '所属群组ID',
            txn int(11) COMMENT '交易量',
            block_number int(11) DEFAULT '0' COMMENT '当前统计到的块高',
            gmt_create datetime COMMENT '创建时间',
            gmt_modify datetime COMMENT '修改时间',
            PRIMARY KEY (group_id,pk_date)
        ) COMMENT='每日交易量记录表' ENGINE=InnoDB DEFAULT CHARSET=utf8
    </update>
    
    <update id="createTbBlock">
        CREATE TABLE IF NOT EXISTS ${tableName} (
            `pk_id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键Id',
            `block_hash` varchar(255) DEFAULT NULL COMMENT '块哈希',
            `block_height` bigint(20) DEFAULT NULL COMMENT '块高',
            `block_time_stamp` datetime(6) DEFAULT NULL COMMENT '块时间',
            `db_hash` varchar(255) DEFAULT NULL COMMENT 'DB哈希',
            `depot_updatetime` datetime(6) DEFAULT NULL COMMENT '记录插入/更新时间',
            `extra_data` longtext COMMENT '附加数据',
            `gas_limit` varchar(255) DEFAULT NULL COMMENT '区块中允许的gas最大值',
            `gas_used` varchar(255) DEFAULT NULL COMMENT '区块所有交易消耗的gas',
            `logs_bloom` longtext COMMENT 'log的布隆过滤器值',
            `parent_hash` varchar(255) DEFAULT NULL COMMENT '父区块哈希',
            `receipts_root` varchar(255) DEFAULT NULL COMMENT '回执根哈希',
            `sealer` varchar(255) DEFAULT NULL COMMENT '共识节点序号',
            `sealer_list` longtext COMMENT '共识节点列表',
            `signature_list` longtext COMMENT '签名列表',
            `state_root` varchar(255) DEFAULT NULL COMMENT '状态根哈希',
            `transaction_list` longtext COMMENT '交易列表',
            `transactions_root` varchar(255) DEFAULT NULL COMMENT '交易根哈希',
            PRIMARY KEY (`pk_id`),
            UNIQUE KEY `UK_block_height` (`block_height`),
            KEY `block_hash` (`block_hash`),
            KEY `block_timestamp` (`block_time_stamp`)
        ) COMMENT='区块信息表' ENGINE=InnoDB DEFAULT CHARSET=utf8
    </update>
    
    <update id="createTbTransaction">
        CREATE TABLE IF NOT EXISTS ${tableName} (
            `pk_id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键Id',
            `block_hash` varchar(255) DEFAULT NULL COMMENT '块哈希',
            `block_height` bigint(20) DEFAULT NULL COMMENT '块高',
            `block_time_stamp` datetime(6) DEFAULT NULL COMMENT '块时间',
            `depot_updatetime` datetime(6) DEFAULT NULL COMMENT '记录插入/更新时间',
            `from` varchar(255) DEFAULT NULL COMMENT '发送者地址',
            `gas` varchar(255) DEFAULT NULL COMMENT '发送者提供的gas',
            `gas_price` varchar(255) DEFAULT NULL COMMENT '发送者提供的gas价格',
            `input` longtext COMMENT '交易的输入',
            `nonce` varchar(255) DEFAULT NULL COMMENT '交易的nonce值',
            `to` varchar(255) DEFAULT NULL COMMENT '接收者地址',
            `tx_hash` varchar(255) DEFAULT NULL COMMENT '交易哈希',
            `tx_index` varchar(255) DEFAULT NULL COMMENT '交易序号',
            `value` varchar(255) DEFAULT NULL COMMENT '转移的值',
            PRIMARY KEY (`pk_id`),
            KEY `block_hash` (`block_hash`),
            KEY `block_timestamp` (`block_time_stamp`)
        ) COMMENT='交易信息表' ENGINE=InnoDB DEFAULT CHARSET=utf8
    </update>
    
    <update id="createTbReceipt">
        CREATE TABLE IF NOT EXISTS ${tableName} (
          `pk_id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键Id',
          `block_hash` varchar(128) DEFAULT NULL COMMENT '块哈希',
          `block_height` bigint(20) DEFAULT NULL COMMENT '块高',
          `block_time_stamp` datetime(6) DEFAULT NULL COMMENT '块时间',
          `contract_address` varchar(255) DEFAULT NULL COMMENT '合约地址',
          `depot_updatetime` datetime(6) DEFAULT NULL COMMENT '记录插入/更新时间',
          `from` varchar(255) DEFAULT NULL COMMENT '发送者地址',
          `gas_used` varchar(255) DEFAULT NULL COMMENT 'gas消耗',
          `input` longtext COMMENT '交易的输入',
          `logs` longtext COMMENT '交易的日志',
          `logs_bloom` longtext COMMENT 'log的布隆过滤器值',
          `message` varchar(255) DEFAULT NULL COMMENT '交易哈希',
          `output` longtext COMMENT '交易的输出',
          `receipt_proof` longtext COMMENT '回执证明',
          `root` varchar(255) DEFAULT NULL COMMENT '状态根',
          `status` varchar(255) DEFAULT NULL COMMENT '交易状态',
          `to` varchar(255) DEFAULT NULL COMMENT '接收者地址',
          `tx_hash` varchar(255) DEFAULT NULL COMMENT '交易哈希',
          `tx_index` varchar(255) DEFAULT NULL COMMENT '交易序号',
          `tx_proof` longtext COMMENT '交易根哈希',
          PRIMARY KEY (`pk_id`),
          KEY `block_hash` (`block_hash`),
          KEY `block_timestamp` (`block_time_stamp`)
        ) COMMENT='交易回执信息表' ENGINE=InnoDB DEFAULT CHARSET=utf8
    </update>

    <update id="createTbChainUser">
        CREATE TABLE IF NOT EXISTS tb_chain_user (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '用户编号',
        `group_id` int(11) DEFAULT NULL COMMENT '所属群组编号',
        `address` varchar(64) DEFAULT NULL COMMENT '公钥地址',
        `create_time` datetime DEFAULT NULL COMMENT '创建时间',
        `modify_time` datetime DEFAULT NULL COMMENT '修改时间',
        PRIMARY KEY (id),
        KEY index_address (address)
        ) COMMENT='链上全量用户信息表' ENGINE=InnoDB AUTO_INCREMENT=200001 DEFAULT CHARSET=utf8
    </update>

    <update id="createTbChainContract">
        CREATE TABLE IF NOT EXISTS tb_chain_contract (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'id',
        `group_id` int(11) DEFAULT NULL COMMENT '所属群组编号',
        `contract_address` varchar(128) COMMENT '合约地址',
        `tx_hash` varchar(255) DEFAULT NULL COMMENT '交易哈希',
        `block_height` bigint(20) DEFAULT NULL COMMENT '块高',
        `from` varchar(255) DEFAULT NULL COMMENT '发送者地址',
        `block_time_stamp` datetime(6) DEFAULT NULL COMMENT '合约创建时间',
        `gmt_create` datetime COMMENT '创建时间',
        `gmt_modify` datetime COMMENT '修改时间',
        PRIMARY KEY (id)
        ) COMMENT='链上全量合约信息表' ENGINE=InnoDB AUTO_INCREMENT=100001 DEFAULT CHARSET=utf8
    </update>
    
    <select id="queryTables" resultType="java.lang.String">
        select table_name from information_schema.tables where table_schema=#{dbName}
        <if test="tableName != null">
        and table_name = #{tableName}
        </if>
    </select>

    <delete id="deleteByTableName" parameterType="java.lang.String">
        delete from ${tableName} limit 1000
    </delete>

    <update id="dropTable" parameterType="java.lang.String">
        drop table if exists ${tableName}
    </update>

</mapper>